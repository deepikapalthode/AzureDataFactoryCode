{
	"name": "dataflowColumnPatternsDemo",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OrdersTable",
						"type": "DatasetReference"
					},
					"name": "sourceOrders"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OrdersTable",
						"type": "DatasetReference"
					},
					"name": "sinkOrderTable"
				}
			],
			"transformations": [
				{
					"name": "derivedColumnOrderDate"
				},
				{
					"name": "alterRowOrderDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as integer,",
				"          ProductName as string,",
				"          OrderDate as timestamp,",
				"          Quantity as integer,",
				"          ProductPrice as decimal(10,2)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceOrders",
				"sourceOrders derive(OrderDate = toDate(OrderDate)) ~> derivedColumnOrderDate",
				"derivedColumnOrderDate alterRow(updateIf(true())) ~> alterRowOrderDate",
				"alterRowOrderDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          OrderID as integer,",
				"          ProductName as string,",
				"          OrderDate as timestamp,",
				"          Quantity as integer,",
				"          ProductPrice as decimal(10,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['OrderID','ProductName'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinkOrderTable"
			]
		}
	}
}