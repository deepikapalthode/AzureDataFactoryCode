{
	"name": "dataflowPivotTransformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OrdersTable",
						"type": "DatasetReference"
					},
					"name": "sourceOrders"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sinkPivotOutput"
				}
			],
			"transformations": [
				{
					"name": "pivotOrders"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as integer,",
				"          ProductName as string,",
				"          OrderDate as timestamp,",
				"          Quantity as integer,",
				"          ProductPrice as decimal(10,2)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     partitionBy('hash', 1)) ~> sourceOrders",
				"sourceOrders pivot(groupBy(Quantity),",
				"     pivotBy(ProductName),",
				"     {} = count(OrderID),",
				"     columnNaming: '$N$V',",
				"     lateral: true,",
				"     partitionBy('hash', 1)) ~> pivotOrders",
				"pivotOrders sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'out10',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['PivotOutput'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkPivotOutput"
			]
		}
	}
}