{
	"name": "dataflowJoinDemo",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emptable",
						"type": "DatasetReference"
					},
					"name": "sourceEmp"
				},
				{
					"dataset": {
						"referenceName": "departmenTable",
						"type": "DatasetReference"
					},
					"name": "sourceDepartment"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "out10",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as integer,",
				"          empname as string,",
				"          salary as decimal(10,2),",
				"          hire_date as date,",
				"          dept as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceEmp",
				"source(output(",
				"          deptid as integer,",
				"          deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceDepartment",
				"sourceEmp, sourceDepartment join(dept == deptid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmployeeData'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          empname,",
				"          salary,",
				"          hire_date,",
				"          deptname",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}