{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "trail101ADF"
		},
		"eventtrigger01_properties_pipelineEventTrigger_parameters_ppcontainer": {
			"type": "string",
			"defaultValue": "@triggerbody().folderpath"
		},
		"eventtrigger01_properties_pipelineEventTrigger_parameters_ppfile": {
			"type": "string",
			"defaultValue": "@triggerbody().filename"
		},
		"eventtrigger01_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/5824bc85-6ad6-4e78-951c-ffbebf57b4ff/resourceGroups/TrialRG/providers/Microsoft.Storage/storageAccounts/trail1storageaccount"
		},
		"work001tumble_properties_pipeline_parameters_windowstarttime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowstarttime"
		},
		"work001tumble_properties_pipeline_parameters_windowendtime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowendtime"
		},
		"work001tumble_properties_pipeline_parameters_triggerstarttime": {
			"type": "string",
			"defaultValue": "@trigger().starttime"
		},
		"workingTumbling_properties_pipeline_parameters_windowstarttime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"workingTumbling_properties_pipeline_parameters_windowendtime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"workingTumbling_properties_pipeline_parameters_triggerstarttime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipelineExists')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Conditional Split",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowConditionalSplitDemo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmp": {},
									"sourceEmployee": {},
									"sinkTesting": {},
									"sinkSales": {},
									"sinkHR": {},
									"sinkTestingemp": {},
									"sinksalesemp": {},
									"sinkOtheremp": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/eventtrigger01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipelineEventTrigger",
							"type": "PipelineReference"
						},
						"parameters": {
							"ppcontainer": "[parameters('eventtrigger01_properties_pipelineEventTrigger_parameters_ppcontainer')]",
							"ppfile": "[parameters('eventtrigger01_properties_pipelineEventTrigger_parameters_ppfile')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/eventinput/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('eventtrigger01_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/work001tumble')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TumblingWindowDemoWorking_copy1",
						"type": "PipelineReference"
					},
					"parameters": {
						"windowstarttime": "[parameters('work001tumble_properties_pipeline_parameters_windowstarttime')]",
						"windowendtime": "[parameters('work001tumble_properties_pipeline_parameters_windowendtime')]",
						"triggerstarttime": "[parameters('work001tumble_properties_pipeline_parameters_triggerstarttime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-10-01T01:00:00Z",
					"endTime": "2023-10-06T01:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/workingTumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TumblingWindowDemoWorking",
						"type": "PipelineReference"
					},
					"parameters": {
						"windowstarttime": "[parameters('workingTumbling_properties_pipeline_parameters_windowstarttime')]",
						"windowendtime": "[parameters('workingTumbling_properties_pipeline_parameters_windowendtime')]",
						"triggerstarttime": "[parameters('workingTumbling_properties_pipeline_parameters_triggerstarttime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Month",
					"interval": 10,
					"startTime": "2023-10-01T01:00:00Z",
					"endTime": "2023-10-06T01:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		}
	]
}